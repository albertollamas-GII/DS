/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package S3Modificado;

import java.awt.Color;
import java.math.BigDecimal;
import java.math.RoundingMode;

/**
 *
 * @author luisg
 */
public class Salpicadero extends javax.swing.JFrame {

    private float RPM;
    private EstadoMotor estadoM;
    private Controlador controlador;
    
    private double distanciaRecorrida = 0.0;
    private double distanciaReciente = 0.0;
    private double velocidad = 0.0;
    
    
    private void soltar(){
        estadoM = EstadoMotor.ENCENDIDO;
        Palanca.clearSelection();
//        RadioCentrado.setEnabled(true);
//        RadioCentrado.doClick();
//        RadioCentrado.setEnabled(false);
        controlador.modificarEstado(EstadoMotor.ENCENDIDO); 

    }
    
    private void pulsarAcelerar(){
        estadoM = EstadoMotor.ACELERANDO;
        RadioAcelerar.setEnabled(true);
        RadioAcelerar.doClick();
        RadioAcelerar.setEnabled(false);
    }

    
    private void pulsarMantener(){
        estadoM = EstadoMotor.MANTENER;
        Reiniciar.setEnabled(false);
        Acelerar.setEnabled(false);
        controlador.encenderAutomatico(RPM);
        CampoVelocidad.setText(""+this.velocidad);
        RadioMantener.setEnabled(true);
        RadioMantener.doClick();
        RadioMantener.setEnabled(false);
        
    }

    
    private void pulsarFrenar(){
        estadoM = EstadoMotor.FRENANDO;
        controlador.modificarEstado(EstadoMotor.FRENANDO);
        RadioFrenar.setEnabled(true);
        RadioFrenar.doClick();
        RadioFrenar.setEnabled(false);
    }

    
    private void pulsarReiniciar(){
        estadoM = EstadoMotor.REINICIANDO;
        controlador.reiniciarAutomatico();
        RadioReiniciar.setEnabled(true);
        RadioReiniciar.doClick();
        RadioReiniciar.setEnabled(false);
    }

    
    /**
     * @param controlador El controlador del motor
     */
    public Salpicadero() {
        initComponents();
        this.RPM = 0;
        this.cuentaKilómetros.setLcdDecimals(2);
        RadioAcelerar.setEnabled(false);
        RadioFrenar.setEnabled(false);
        RadioMantener.setEnabled(false);
        RadioReiniciar.setEnabled(false);
//        RadioCentrado.setEnabled(false);
        Frenar.setEnabled(false);
        Acelerar.setEnabled(false);
        Mantener.setEnabled(false);
        Reiniciar.setEnabled(false);
    }
    
    public void setReferencias(Controlador controlador){
        this.controlador = controlador;
    }
    
    public void pushRPM(float RPM, EstadoMotor estado){
        this.RPM = RPM;
        if(estadoM == EstadoMotor.REINICIANDO && estado == EstadoMotor.MANTENER){
            System.out.println("Se va de madres");
            pulsarMantener();
        }
        setVelocidad(this.RPM);
        this.estadoM = estado;
        this.Velocimetro.setValueAnimated(velocidad);
        setDistancia(this.velocidad);
        this.cuentaKilómetros.setLcdValue(this.distanciaRecorrida);
        this.cuentaKilómetros.setLcdValue(this.distanciaReciente);
        this.radialRPM.setValueAnimated(this.RPM);
        
    }
    
    public void setVelocidad(float revoluciones){
         this.velocidad = (2 * Math.PI * 0.15f * revoluciones * (60f/1000f));
         BigDecimal bd = new BigDecimal(velocidad).setScale(2, RoundingMode.HALF_UP);
         this.velocidad = bd.doubleValue();
    }
    
    public void setDistancia(double velocidad){
        
        double distancia = velocidad * 0.0015;
        if (estadoM == EstadoMotor.APAGADO) 
            distanciaReciente = 0;
        else if (estadoM == EstadoMotor.ACELERANDO || estadoM == EstadoMotor.FRENANDO){
            distanciaReciente = distanciaReciente + distancia;
            distanciaRecorrida = distanciaRecorrida + distancia;
        }
        
        BigDecimal bd3 = new BigDecimal(distanciaReciente).setScale(2, RoundingMode.HALF_UP);
        this.distanciaReciente = bd3.doubleValue();
        
        BigDecimal bd4 = new BigDecimal(distanciaRecorrida).setScale(2, RoundingMode.HALF_UP);
        this.distanciaRecorrida = bd4.doubleValue();
    }
    
    /*public void pushEstado(EstadoMotor estado){
        this.estado = estado;
    }*/
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Palanca = new javax.swing.ButtonGroup();
        radial2TopBeanInfo1 = new eu.hansolo.steelseries.gauges.Radial2TopBeanInfo();
        radial1VerticalBeanInfo1 = new eu.hansolo.steelseries.gauges.Radial1VerticalBeanInfo();
        radial1SquareBeanInfo1 = new eu.hansolo.steelseries.gauges.Radial1SquareBeanInfo();
        radial1SquareBeanInfo2 = new eu.hansolo.steelseries.gauges.Radial1SquareBeanInfo();
        radial1VerticalBeanInfo2 = new eu.hansolo.steelseries.gauges.Radial1VerticalBeanInfo();
        radial2TopBeanInfo2 = new eu.hansolo.steelseries.gauges.Radial2TopBeanInfo();
        digitalRadialBeanInfo1 = new eu.hansolo.steelseries.gauges.DigitalRadialBeanInfo();
        digitalRadialBeanInfo2 = new eu.hansolo.steelseries.gauges.DigitalRadialBeanInfo();
        radialBeanInfo1 = new eu.hansolo.steelseries.gauges.RadialBeanInfo();
        radialBeanInfo2 = new eu.hansolo.steelseries.gauges.RadialBeanInfo();
        lightBulbBeanInfo1 = new eu.hansolo.steelseries.extras.LightBulbBeanInfo();
        radialBargraphBeanInfo1 = new eu.hansolo.steelseries.gauges.RadialBargraphBeanInfo();
        radialCounterBeanInfo1 = new eu.hansolo.steelseries.gauges.RadialCounterBeanInfo();
        PanelCruz = new javax.swing.JPanel();
        PVertical1 = new javax.swing.JPanel();
        RadioAcelerar = new javax.swing.JRadioButton();
        RadioMantener = new javax.swing.JRadioButton();
        RadioReiniciar = new javax.swing.JRadioButton();
        RadioFrenar = new javax.swing.JRadioButton();
        Reiniciar = new javax.swing.JButton();
        Mantener = new javax.swing.JButton();
        Acelerar = new javax.swing.JButton();
        Frenar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        EncendidoApagado = new javax.swing.JToggleButton();
        Informacion = new javax.swing.JLabel();
        Velocimetro = new eu.hansolo.steelseries.gauges.Radial();
        labelVelocidad = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        VelocidadLabel = new javax.swing.JLabel();
        CampoVelocidad = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cuentaKilómetros = new eu.hansolo.steelseries.gauges.DisplayCircular();
        radialRPM = new eu.hansolo.steelseries.gauges.Radial1Vertical();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));

        PanelCruz.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        PVertical1.setBackground(new java.awt.Color(255, 255, 0));
        PVertical1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        PVertical1.setEnabled(false);
        PVertical1.setFocusable(false);
        PVertical1.setOpaque(false);

        Palanca.add(RadioAcelerar);
        RadioAcelerar.setText("jRadioButton2");

        Palanca.add(RadioMantener);
        RadioMantener.setText("jRadioButton3");

        Palanca.add(RadioReiniciar);
        RadioReiniciar.setText("jRadioButton4");

        Palanca.add(RadioFrenar);
        RadioFrenar.setText("jRadioButton1");
        RadioFrenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioFrenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PVertical1Layout = new javax.swing.GroupLayout(PVertical1);
        PVertical1.setLayout(PVertical1Layout);
        PVertical1Layout.setHorizontalGroup(
            PVertical1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PVertical1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PVertical1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RadioAcelerar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RadioMantener, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RadioReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RadioFrenar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        PVertical1Layout.setVerticalGroup(
            PVertical1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PVertical1Layout.createSequentialGroup()
                .addComponent(RadioAcelerar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(RadioFrenar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(RadioMantener, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(RadioReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Reiniciar.setText("REINICIAR");
        Reiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReiniciarActionPerformed(evt);
            }
        });

        Mantener.setText("MANTENER");
        Mantener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MantenerActionPerformed(evt);
            }
        });

        Acelerar.setText("ACELERAR");
        Acelerar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AcelerarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AcelerarMouseReleased(evt);
            }
        });
        Acelerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcelerarActionPerformed(evt);
            }
        });

        Frenar.setText("FRENAR");
        Frenar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                FrenarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                FrenarMouseReleased(evt);
            }
        });
        Frenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FrenarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setText("SCACV");

        javax.swing.GroupLayout PanelCruzLayout = new javax.swing.GroupLayout(PanelCruz);
        PanelCruz.setLayout(PanelCruzLayout);
        PanelCruzLayout.setHorizontalGroup(
            PanelCruzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCruzLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(PVertical1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(PanelCruzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Acelerar)
                    .addComponent(Mantener, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Frenar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reiniciar)
                    .addGroup(PanelCruzLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)))
                .addGap(126, 126, 126))
        );
        PanelCruzLayout.setVerticalGroup(
            PanelCruzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCruzLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(PanelCruzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PanelCruzLayout.createSequentialGroup()
                        .addComponent(Acelerar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Frenar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Mantener)
                        .addGap(18, 18, 18)
                        .addComponent(Reiniciar))
                    .addComponent(PVertical1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        EncendidoApagado.setForeground(new java.awt.Color(51, 255, 51));
        EncendidoApagado.setText("ENCENDER");
        EncendidoApagado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EncendidoApagadoActionPerformed(evt);
            }
        });

        Informacion.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        Informacion.setText("APAGADO");

        Velocimetro.setLedVisible(false);
        Velocimetro.setMaxMeasuredValueVisible(true);
        Velocimetro.setMaxValue(280.0);
        Velocimetro.setTitle("Velocímetro");
        Velocimetro.setUnitString("km/h");

        labelVelocidad.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        labelVelocidad.setText("VELOCIDAD");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        VelocidadLabel.setText("VELOCIDAD AUTOMÁTICA : ");

        CampoVelocidad.setText("N/A");

        jLabel1.setText("km/h");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(VelocidadLabel))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(CampoVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VelocidadLabel)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        cuentaKilómetros.setTitle("Cuenta Kilómetros");
        cuentaKilómetros.setUnitString("km");

        radialRPM.setLedVisible(false);
        radialRPM.setMaxValue(5000.0);
        radialRPM.setTitle("RPM");
        radialRPM.setUnitString("");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel3.setText("KILÓMETROS");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel4.setText("REVOLUCIONES POR MINUTO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(319, 319, 319)
                        .addComponent(EncendidoApagado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(PanelCruz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(labelVelocidad)
                        .addGap(383, 383, 383)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(19, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Informacion)
                            .addComponent(Velocimetro, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(124, 124, 124)
                        .addComponent(cuentaKilómetros, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(167, 167, 167)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radialRPM, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(56, 56, 56))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelVelocidad, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Velocimetro, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cuentaKilómetros, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radialRPM, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Informacion, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)))
                        .addGap(17, 17, 17)
                        .addComponent(EncendidoApagado)
                        .addContainerGap())
                    .addComponent(PanelCruz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RadioFrenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioFrenarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RadioFrenarActionPerformed
 
    private void EncendidoApagadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EncendidoApagadoActionPerformed
        if(EncendidoApagado.isSelected()){
            Acelerar.setEnabled(true);
            Frenar.setEnabled(true);
            Reiniciar.setEnabled(false);
            Mantener.setEnabled(false);
            EncendidoApagado.setText("APAGAR");
            EncendidoApagado.setForeground(Color.red);
            Informacion.setText("ENCENDIDO");
            controlador.modificarEstado(EstadoMotor.ENCENDIDO);
        } else{
            Acelerar.setEnabled(false);
            Frenar.setEnabled(false);
            Mantener.setEnabled(false);
            Reiniciar.setEnabled(false);
            EncendidoApagado.setText("ENCENDER");
            EncendidoApagado.setForeground(Color.green);
            Informacion.setText("APAGADO");
            controlador.modificarEstado(EstadoMotor.APAGADO);
        }
    }//GEN-LAST:event_EncendidoApagadoActionPerformed

    private void FrenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FrenarActionPerformed
        if(estadoM != EstadoMotor.FRENANDO){
            pulsarFrenar();
        }else{
            soltar();
        }
    }//GEN-LAST:event_FrenarActionPerformed

    private void ReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReiniciarActionPerformed
        if(estadoM != EstadoMotor.REINICIANDO){
            pulsarReiniciar();
        }else{
            soltar();
        }
    }//GEN-LAST:event_ReiniciarActionPerformed

    private void MantenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MantenerActionPerformed
        if(estadoM != EstadoMotor.MANTENER){ 
            pulsarMantener();
        }else{
            soltar();
            Reiniciar.setEnabled(true);
            Acelerar.setEnabled(true);
        }
    }//GEN-LAST:event_MantenerActionPerformed

    private void AcelerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcelerarActionPerformed

    }//GEN-LAST:event_AcelerarActionPerformed

    private void AcelerarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AcelerarMousePressed
        // TODO add your handling code here
            controlador.modificarEstado(EstadoMotor.ACELERANDO);
            Acelerar.setText("Soltar acelerador");
            Acelerar.setForeground(Color.red);
            RadioAcelerar.setEnabled(true);
            RadioAcelerar.doClick();
            Mantener.setEnabled(true); Reiniciar.setEnabled(true);
            Informacion.setText("ACELERANDO");
            estadoM = EstadoMotor.ACELERANDO;
    }//GEN-LAST:event_AcelerarMousePressed

    private void AcelerarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AcelerarMouseReleased
        // TODO add your handling code here:
            soltar();
            RadioAcelerar.setEnabled(false);
            Acelerar.setForeground(Color.black);
            Acelerar.setText("ACELERAR");
            Informacion.setText("ENCENDIDO");
            estadoM = EstadoMotor.ENCENDIDO;
    }//GEN-LAST:event_AcelerarMouseReleased

    private void FrenarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FrenarMousePressed
        // TODO add your handling code here:
            pulsarFrenar();
            Frenar.setText("Soltar freno");
            Informacion.setText("FRENANDO");
            Frenar.setForeground(Color.red);
           
    }//GEN-LAST:event_FrenarMousePressed

    private void FrenarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FrenarMouseReleased
        // TODO add your handling code here:
            Frenar.setText("FRENAR");
            Informacion.setText("Encendido");
            Frenar.setForeground(Color.black);
            soltar();
    }//GEN-LAST:event_FrenarMouseReleased

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Acelerar;
    private javax.swing.JLabel CampoVelocidad;
    private javax.swing.JToggleButton EncendidoApagado;
    private javax.swing.JButton Frenar;
    private javax.swing.JLabel Informacion;
    private javax.swing.JButton Mantener;
    private javax.swing.JPanel PVertical1;
    private javax.swing.ButtonGroup Palanca;
    private javax.swing.JPanel PanelCruz;
    private javax.swing.JRadioButton RadioAcelerar;
    private javax.swing.JRadioButton RadioFrenar;
    private javax.swing.JRadioButton RadioMantener;
    private javax.swing.JRadioButton RadioReiniciar;
    private javax.swing.JButton Reiniciar;
    private javax.swing.JLabel VelocidadLabel;
    private eu.hansolo.steelseries.gauges.Radial Velocimetro;
    private eu.hansolo.steelseries.gauges.DisplayCircular cuentaKilómetros;
    private eu.hansolo.steelseries.gauges.DigitalRadialBeanInfo digitalRadialBeanInfo1;
    private eu.hansolo.steelseries.gauges.DigitalRadialBeanInfo digitalRadialBeanInfo2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelVelocidad;
    private eu.hansolo.steelseries.extras.LightBulbBeanInfo lightBulbBeanInfo1;
    private eu.hansolo.steelseries.gauges.Radial1SquareBeanInfo radial1SquareBeanInfo1;
    private eu.hansolo.steelseries.gauges.Radial1SquareBeanInfo radial1SquareBeanInfo2;
    private eu.hansolo.steelseries.gauges.Radial1VerticalBeanInfo radial1VerticalBeanInfo1;
    private eu.hansolo.steelseries.gauges.Radial1VerticalBeanInfo radial1VerticalBeanInfo2;
    private eu.hansolo.steelseries.gauges.Radial2TopBeanInfo radial2TopBeanInfo1;
    private eu.hansolo.steelseries.gauges.Radial2TopBeanInfo radial2TopBeanInfo2;
    private eu.hansolo.steelseries.gauges.RadialBargraphBeanInfo radialBargraphBeanInfo1;
    private eu.hansolo.steelseries.gauges.RadialBeanInfo radialBeanInfo1;
    private eu.hansolo.steelseries.gauges.RadialBeanInfo radialBeanInfo2;
    private eu.hansolo.steelseries.gauges.RadialCounterBeanInfo radialCounterBeanInfo1;
    private eu.hansolo.steelseries.gauges.Radial1Vertical radialRPM;
    // End of variables declaration//GEN-END:variables
}
